#!/usr/bin/env ruby
$KCODE = 'u'
require 'yaml'
require 'rubygems'
require 'mechanize'

class Nowa
  class << self
    def entries(nowa_id, password=nil)
      password ||= password(nowa_id)
      Nowa.new(nowa_id, password).entries
    end

    def entry(entry_id, nowa_id, password=nil)
      password ||= password(nowa_id)
      Nowa.new(nowa_id, password).entry(entry_id)
    end

    def create(text, nowa_id, password=nil)
      password ||= password(nowa_id)
      text = text.split(/\n/, -1)
      Nowa.new(nowa_id, password).
        create(text[0], text[1..-3].join("\n"), text[-2])
    end

    def update(text, entry_id, nowa_id, password=nil)
      password ||= password(nowa_id)
      text = text.split(/\n/, -1)
      Nowa.new(nowa_id, password).
        update(entry_id, text[0], text[1..-3].join("\n"), text[-2])
    end

    def password(nowa_id)
      YAML.load_file(
        File.expand_path('~/.nowa'))[nowa_id]
    end
  end

  def initialize(nowa_id, password)
    @agent = WWW::Mechanize.new
    @agent.user_agent_alias = 'Mac Safari'

    page = @agent.get 'http://my.nowa.jp'
    form = page.forms[0]
    form.nowa_id = nowa_id
    form.password = password
    @agent.submit form
  end

  # entries :: [String]
  def entries
    page = @agent.get 'http://my.nowa.jp/entry/'
    h = Hpricot(page.body)
    (h/'#entrylisttbl'/:a).map {|link|
      id = link[:href][/[0-9]+$/]
      title = link.inner_text
      "#{id}:#{title}"
    }
  end

  # entry :: [String]
  def entry(entry_id)
    page = @agent.get "http://my.nowa.jp/entry/edit?id=#{entry_id}"
    f = page.forms[0]
    [f.title] + f.body.split(/\n/, -1) + [f.tag]
  end

  # create :: IO
  def create(title, body, tag)
    page = @agent.get 'http://my.nowa.jp/entry/add'
    form = page.forms[0]
    form.title = title
    form.body = self.class.magic_body(body)
    form.tag = tag
    @agent.submit form
  end

  # update :: IO
  def update(entry_id, title, body, tag)
    page = @agent.get "http://my.nowa.jp/entry/edit?id=#{entry_id}"
    form = page.forms[0]
    form.title = title
    form.body = self.class.magic_body(body)
    form.tag = tag
    @agent.submit form
  end

  # magic_body :: String -> String
  def self.magic_body(body)
    body = body.gsub(%r|^http://.*|) {|m| %|<a href="#{m}">#{m}</a>| }
    pre_p = false
    body.enum_for(:each_line).map {|line|
      if pre_p
        if line.chomp == '|>'
          pre_p = false
          '</pre>'
        else
          line.gsub('<', '&lt;').gsub('>', '&gt;')
        end
      else
        if line.chomp == '<|'
          pre_p = true
          '<pre>'
        else
          line
        end
      end
    }.join
  end
end

if __FILE__ == $0
  case ARGV[0]
  when 'create'
    Nowa.create(STDIN.read, ARGV[1])
  when 'update'
    Nowa.update(STDIN.read, ARGV[1], ARGV[2])
  else
    puts Nowa.__send__(*ARGV)
  end
end
